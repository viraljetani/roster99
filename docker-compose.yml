version: "3.7"
services:
    app:
      build:
        args:
          user: viral
          uid: 1000
        context: ./
        dockerfile: Dockerfile
      image: roster99
      container_name: roster99-app
      restart: unless-stopped
      working_dir: /var/www/
      volumes:
        - ./:/var/www
      networks:
        - roster99

    db:
      image: mysql:5.7
      container_name: mysql57
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
        SERVICE_TAGS: dev
        SERVICE_NAME: mysql
      ports:
        - 3306:3306
      volumes:
        - ./docker-compose/mysql:/docker-entrypoint-initdb.d
      networks:
        - roster99
    
    
    phpmyadmin:
      image: phpmyadmin/phpmyadmin:5.0.1
      container_name: phpmyadmin
      depends_on:
        - db
      restart: unless-stopped
      environment:
        PMA_HOST: db
      ports:
        - "8080:80"
      networks:
        - roster99

    nginx:
      image: nginx:1.17-alpine
      container_name: nginx
      restart: unless-stopped
      ports:
        - 8002:80
      volumes:
        - ./:/var/www
        - ./docker-compose/nginx:/etc/nginx/conf.d
      networks:
        - roster99

    npm:
      image: node:latest
      container_name: npm
      volumes:
        - ./:/var/www
      working_dir: /var/www
      entrypoint: ['npm']
      networks:
        - roster99

networks:
  roster99:
    driver: bridge
